#!/bin/sh

if [ -e "irdata-config" ]; then
    . "$PWD/irdata-config"
elif [ -e "scripts/irdata-config" ]; then
    . 'scripts/irdata-config'
else
    . 'irdata-config'
fi

if [ "$1" = '--help' ]; then
    cat 1>&2 <<EOF
Usage: $PROGNAME <archive filename>...

This scripts accepts archive filenames and unpacks each archive into the
directory in which it currently resides. If the list of archive files is
specified as - then the script tries to read archive filenames from standard
input until an end-of-file condition occurs.
EOF
    exit 1
fi

if [ ! "$*" ]; then
    echo "$PROGNAME: Archive filenames or - must be specified." 1>&2
    exit 1
fi

while [ "$*" ]; do
    ARCHIVE=$1

    if [ "$ARCHIVE" = "-" ]; then
        echo "$PROGNAME: Reading archive filename from standard input..." 1>&2
        read -r ARCHIVE || exit 0
    else
        shift 1
    fi

    if [ ! -e "$ARCHIVE" ]; then
        echo "$PROGNAME: Archive file $ARCHIVE does not exist." 1>&2
        exit 1
    fi

    # Get the archive extension.

    ARCHIVEPATH=`dirname "$ARCHIVE"`
    ARCHIVENAME=`basename "$ARCHIVE"`
    ARCHIVETYPE=${ARCHIVENAME#*.}

    # Process the most common archive types.

    if [ "$ARCHIVETYPE" = "zip" ]; then
        unzip "$ARCHIVE" -d "$ARCHIVEPATH"
    elif [ "$ARCHIVETYPE" = "tar.gz" ]; then
        tar zxf "$ARCHIVE" -C "$ARCHIVEPATH"
    else
        echo "$PROGNAME: Archive type $ARCHIVETYPE is not supported for archive: $ARCHIVE" 1>&2
    fi
done
